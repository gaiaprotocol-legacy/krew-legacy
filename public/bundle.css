/*!**********************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./public/style/lib/reset.css ***!
  \**********************************************************************************************************/
/***
    The new CSS reset - version 1.8.4 (last updated 14.2.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
 *:where(:not(html, iframe, canvas, img, svg, video, audio, summary):not(svg *, symbol *)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
    -webkit-tap-highlight-color: transparent;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
    all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
    content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
    all: revert;
}
/*!*********************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/less-loader/dist/cjs.js!./public/style/main.less ***!
  \*********************************************************************************************************************************************/
button.component {
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
button.component.disabled {
  cursor: not-allowed;
}
button.component.contained {
  border-radius: 6px;
  border: 1px solid #25D366;
  background: rgba(37, 211, 102, 0.12);
  color: #25D366;
}
.splash-screen.component {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  background-color: var(--bg-color);
  display: flex;
  justify-content: center;
  align-items: center;
}
.splash-screen.component > img {
  width: 120px;
  height: 120px;
}
.post-display.sofi-component {
  display: flex;
  gap: 10px;
  cursor: pointer;
  padding: 20px;
}
@media only screen and (max-width: 859px) {
  .post-display.sofi-component {
    gap: 6px;
  }
}
.post-display.sofi-component .author-profile-image {
  flex-shrink: 0;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #252525;
  background-size: cover;
  cursor: pointer;
}
@media only screen and (max-width: 859px) {
  .post-display.sofi-component .author-profile-image {
    width: 34px;
    height: 34px;
  }
}
.post-display.sofi-component .author {
  padding-top: 4px;
  display: flex;
  gap: 4px;
}
.post-display.sofi-component .author > .name {
  font-weight: 700;
  cursor: pointer;
}
.post-display.sofi-component .author > .x-username {
  color: #595959;
  cursor: pointer;
}
.post-display.sofi-component button.owner-menu {
  cursor: pointer;
}
.post-display.sofi-component .message {
  margin-top: 6px;
}
.post-display.sofi-component .rich-display {
  margin-top: 20px;
}
.post-display.sofi-component .date {
  margin-top: 20px;
  color: #595959;
  font-size: 12px;
}
.post-display.sofi-component .actions {
  margin-top: 20px;
  display: flex;
  gap: 30px;
}
.post-display.sofi-component .actions > button {
  display: flex;
  gap: 16px;
  cursor: pointer;
  align-items: center;
}
.post-thread.sofi-component > .post-display,
.post-thread.sofi-component > .post-form {
  border-bottom: 1px solid #242424;
}
.material-symbols-outlined {
  font-variation-settings: 'FILL' 0, 'wght' 100, 'GRAD' 0, 'opsz' 24;
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/inter/v13/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfMZg.ttf) format('truetype');
}
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url(https://fonts.gstatic.com/s/inter/v13/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuI6fMZg.ttf) format('truetype');
}
:root {
  --bg-color: #171821;
  --text-color: #B5BFD6;
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: 'Inter', sans-serif;
  font-size: 14px;
}
html,
body {
  height: 100%;
}
.profile-image {
  flex-shrink: 0;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #252525;
  background-size: cover;
}
@media only screen and (max-width: 859px) {
  .profile-image {
    width: 34px;
    height: 34px;
  }
}
.layout {
  position: relative;
  height: 100%;
  margin: auto;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
}
@media only screen and (max-width: 859px) {
  .layout {
    height: auto;
    display: block;
    padding-bottom: calc(90px + env(safe-area-inset-bottom));
  }
}
.layout > .title-bar {
  flex-shrink: 0;
}
.layout > main {
  display: flex;
  flex-grow: 1;
}
.layout > main > .nav-bar {
  flex-shrink: 0;
}
.layout > main > .content {
  flex-grow: 1;
  overflow-y: auto;
}
@media only screen and (max-width: 859px) {
  .layout > main > .content {
    overflow-y: visible;
  }
}
.nav-bar {
  width: 90px;
  display: flex;
  flex-direction: column;
  gap: 26px;
  overflow-y: auto;
  position: sticky;
  top: 0;
  z-index: 1;
  border-right: 1px solid #393636;
}
@media only screen and (max-width: 859px) {
  .nav-bar {
    position: fixed;
    top: auto;
    bottom: 0;
    z-index: 999990;
    flex-direction: row;
    width: 100%;
    height: calc(90px + env(safe-area-inset-bottom));
    padding-bottom: env(safe-area-inset-bottom);
    overflow: hidden;
    justify-content: space-between;
    gap: 0;
    border-right: none;
    border-top: 1px solid #393636;
  }
}
.nav-bar::before,
.nav-bar::after {
  content: '';
}
.nav-bar > button {
  height: 70px;
  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
}
@media only screen and (max-width: 859px) {
  .nav-bar > button {
    width: 70px;
    height: auto;
  }
}
.nav-bar > button > .icon {
  font-size: 46px;
}
.nav-bar > button.active {
  border-left: 2px solid #25D366;
  border-right: 2px solid var(--bg-color);
  background: linear-gradient(90deg, rgba(37, 211, 102, 0.2) 0%, rgba(0, 0, 0, 0) 100%);
}
.nav-bar > button.active > .icon {
  color: #fff;
}
@media only screen and (max-width: 859px) {
  .nav-bar > button.active {
    border-left: none;
    border-right: none;
    border-top: 2px solid var(--bg-color);
    border-bottom: 2px solid #25D366;
    background: linear-gradient(0deg, rgba(37, 211, 102, 0.2) 0%, rgba(0, 0, 0, 0) 100%);
  }
}
.nav-bar > button.add > .icon {
  border: 1px dashed #B5BFD6;
  border-radius: 50%;
}
@media only screen and (max-width: 859px) {
  .nav-bar > button.add {
    display: none;
  }
}
.title-bar {
  height: 65px;
  padding-right: 55px;
  border-bottom: 1px solid #393636;
  display: flex;
  align-items: center;
  gap: 24px;
}
.title-bar > h1 {
  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  width: 90px;
  height: 100%;
  border-right: 1px solid #393636;
}
.title-bar > h1 > img {
  width: 55px;
}
@media only screen and (max-width: 859px) {
  .title-bar > h1 {
    display: none;
  }
}
.title-bar > .title-bar-search-form {
  height: 100%;
  flex-grow: 1;
  margin-left: 30px;
}
.title-bar > button.noti {
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: #474B54;
}
.title-bar > button.noti > .icon {
  font-size: 30px;
}
.title-bar > button.sign-in {
  width: 120px;
  height: 32px;
}
.title-bar-search-form > label {
  display: flex;
  align-items: center;
  gap: 8px;
  height: 100%;
}
.title-bar-search-form > label > .icon {
  cursor: default;
}
.title-bar-search-form > label > input {
  flex-grow: 1;
  max-width: 320px;
  height: 100%;
}
.title-bar-search-form > label > input::placeholder {
  color: #474B54;
  font-size: 12px;
  font-style: italic;
}
.title-bar-user-display {
  display: flex;
  align-items: center;
  gap: 8px;
  cursor: pointer;
}
.title-bar-user-display > .profile-image {
  width: 30px;
  height: 30px;
}
.title-bar-user-display > .name {
  font-size: 12px;
}
.title-bar-user-display > button.dropdown {
  margin-bottom: -2px;
}

