import{BigNumber as e}from"@ethersproject/bignumber";const t={Google:"google.com",Apple:"apple.com",Twitter:"twitter.com",Discord:"discord.com",Facebook:"facebook.com",Kakao:"kakao.com"};var n,o,a,r,_,E,s,i,c,A,T,N;!function(e){e.ETHEREUM="ethereum",e.SEPOLIA="sepolia",e.POLYGON="polygon",e.MUMBAI="mumbai",e.TEZOS="tezos",e.GHOSTNET="ghostnet",e.BNB_SMART_CHAIN="bnb_smart_chain",e.BNB_SMART_CHAIN_TESTNET="bnb_smart_chain_testnet",e.KLAYTN="klaytn",e.BAOBAB="baobab",e.SOLANA="solana",e.SOLANA_DEVNET="solana_devnet",e.NEAR="near",e.NEAR_TESTNET="near_testnet",e.BORA="bora",e.BORA_TESTNET="bora_testnet",e.APTOS="aptos",e.APTOS_TESTNET="aptos_testnet",e.MEVERSE="meverse",e.MEVERSE_TESTNET="meverse_testnet",e.PSM="psm",e.PSM_TESTNET="psm_testnet",e.PSM_TESTNET_TEST="psm_testnet_test",e.PSM_TESTNET_DEV="psm_testnet_dev",e.HOME_VERSE="home_verse",e.HOME_VERSE_TESTNET="home_verse_testnet",e.YOOLDO_VERSE="yooldo_verse",e.YOOLDO_VERSE_TESTNET="yooldo_verse_testnet",e.SAND_VERSE="sand_verse",e.OASYS="oasys",e.OASYS_TESTNET="oasys_testnet",e.MCH_VERSE="mch_verse",e.MCH_VERSE_TESTNET="mch_verse_testnet",e.HEDERA="hedera",e.HEDERA_TESTNET="hedera_testnet",e.DEFI_VERSE_TESTNET="defi_verse_testnet",e.DEFI_VERSE="defi_verse",e.KROMA="kroma",e.KROMA_SEPOLIA="kroma_sepolia",e.ASM_QA="asm_qa",e.ASM_TEST="asm_test",e.ASM_DEV="asm_dev",e.ASM_STAGE="asm_stage",e.LINEA="linea",e.LINEA_GOERLI="linea_goerli"}(n||(n={})),function(e){e.ETHEREUM="ETHEREUM",e.POLYGON="POLYGON",e.BNB_SMART_CHAIN="BNB_SMART_CHAIN",e.KLAYTN="KLAYTN",e.SOLANA="SOLANA",e.TEZOS="TEZOS",e.NEAR="NEAR",e.BORA="BORA",e.APTOS="APTOS",e.MEVERSE="MEVERSE",e.PSM="PSM",e.PSM_TEST="PSM_TEST",e.PSM_DEV="PSM_DEV",e.HOME_VERSE="HOME_VERSE",e.YOOLDO_VERSE="YOOLDO_VERSE",e.SAND_VERSE="SAND_VERSE",e.OASYS="OASYS",e.MCH_VERSE="MCH_VERSE",e.HEDERA="HEDERA",e.DEFI_VERSE="DEFI_VERSE",e.KROMA="KROMA",e.ASM_TEST="ASM_TEST",e.ASM_QA="ASM_QA",e.ASM_DEV="ASM_DEV",e.ASM_STAGE="ASM_STAGE",e.LINEA="LINEA"}(o||(o={})),function(e){e.Connected="CONNECTED",e.Unconnected="UNCONNECTED"}(a||(a={}));class S{constructor(e,t){S.ensureHexString(e),S.checkLength(e,t),this.hex=e,this.length=t}static empty(){return new S("",0)}static fromUint8Array(e){return new S(R(e),e.length)}static fromHex(e,t){return new S(e,t)}static ensureHexString(e){try{if(""===e)return;if(null==e)throw new Error(`hex is null ${e}`);if(!e.startsWith("0x"))throw new Error(`hex does not start with 0x ${e}`);if(null==e.match("0x[0-9a-fA-F]+"))throw new Error(`invalid hex data ${e}`)}catch(e){throw e}}static checkLength(e,t){if(0===e.length)return;if(4*(e.length-2)/8>t)throw new Error(`length is less than hex data ${e}, ${t}`)}toString(){return this.hex}toHex(){return this.hex}toBigNumber(){return e.from(this.hex)}toJSON(){return{hex:this.hex,length:this.length}}static fromJSON(e){const{hex:t,length:n}=JSON.parse(e);return new S(t,n)}static fromBigNumber(e,t){return S.fromHex(e.toHexString(),t)}toUInt8Array(){const e=this.hex.substring(2),t=[];for(let n=0;n<e.length;n+=2)t.push(parseInt(e.substring(n,n+2),16));return new Uint8Array(t)}static concat(e,t){try{const n=e.toUInt8Array(),o=t.toUInt8Array(),a=new Uint8Array(n.length+o.length);a.set(n),a.set(o,n.length);const r=R(a);return new S(r,n.length+o.length)}catch(e){return console.debug("concat error",e),S.empty()}}split(e){const t=this.toUInt8Array();return[S.fromUint8Array(t.slice(0,e)),S.fromUint8Array(t.slice(e))]}clone(){return new S(this.hex,this.length)}unsafeSetLength(e){this.length=e}}function R(e){return"0x"+[...e].map((e=>e.toString(16).padStart(2,"0"))).join("")}function O(e){return function(e){return null===e}(e)||function(e){return void 0===e}(e)}!function(e){e.Local="Local",e.Dev="Dev",e.StageTest="StageTest",e.StageMainnet="StageMainnet",e.ProdTest="ProdTest",e.ProdMainnet="ProdMainnet"}(r||(r={})),function(e){e.Linux="linux",e.MacOS="mac_os",e.Unix="unix",e.Unknown="unknown",e.Windows="windows"}(_||(_={})),function(e){e.Android="android",e.iOS="ios",e.Unknown="unknown",e.WindowsPhone="Windows Phone"}(E||(E={})),function(e){e.face_logInSignUp="face_logInSignUp",e.face_loggedIn="face_loggedIn",e.face_logOut="face_logOut",e.face_open2fa="face_open2fa",e.face_currentUser="face_currentUser",e.face_accounts="face_accounts",e.face_getUserVerificationToken="face_getUserVerificationToken",e.face_openIframe="face_openIframe",e.face_closeIframe="face_closeIframe",e.face_ready="face_ready",e.face_openHome="face_openHome",e.face_openBuy="face_openBuy",e.face_openKit="face_openKit",e.face_connectExternalWallet="face_connectExternalWallet",e.face_openWalletConnect="face_openWalletConnect",e.face_confirmWalletConnectDapp="face_confirmWalletConnectDapp",e.face_switchNetwork="face_switchNetwork",e.face_directSocialLogin="face_directSocialLogin",e.face_getIdToken="face_getIdToken",e.face_loginWithIdToken="face_loginWithIdToken",e.face_loginWithAccessToken="face_loginWithAccessToken",e.face_showToast="face_showToast",e.bora_connect="bora_connect",e.bora_isConnected="bora_isConnected",e.eth_sendTransaction="eth_sendTransaction",e.eth_getBalance="eth_getBalance",e.eth_call="eth_call",e.eth_estimateGas="eth_estimateGas",e.eth_sign="eth_sign",e.eth_signTypedData_v3="eth_signTypedData_v3",e.eth_signTypedData_v4="eth_signTypedData_v4",e.eth_chainId="eth_chainId",e.eth_accounts="eth_accounts",e.personal_sign="personal_sign",e.personal_listAccounts="personal_listAccounts",e.wallet_switchEthereumChain="wallet_switchEthereumChain",e.solana_sendTransaction="solana_sendTransaction",e.near_broadcast_tx_async="near_broadcast_tx_async",e.near_get_balance="near_get_balance",e.aptos_signMultiAgentTransaction="aptos_signMultiAgentTransaction",e.aptos_signMessage="aptos_signMessage",e.aptos_signTransaction="aptos_signTransaction",e.aptos_signAndSubmitTransaction="aptos_signAndSubmitTransaction",e.hedera_associate="hedera_associate",e.tezos_publicKey="tezos_publicKey",e.tezos_transferFA2="tezos_transferFA2",e.tezos_transferCoin="tezos_transferCoin",e.hedera_getAccountId="hedera_getAccountId",e.hedera_getHashConnectPairString="hedera_getHashConnectPairString",e.hedera_initHashConnect="hedera_initHashConnect",e.hedera_pairHashConnect="hedera_pairHashConnect",e.hedera_disconnectHashConnect="hedera_disconnectHashConnect"}(s||(s={})),function(e){e.FACE_SDK="FACE_SDK",e.FACE_IFRAME="FACE_IFRAME",e.FACE_WALLET_CONNECT="FACE_WALLET_CONNECT",e.FACE_NATIVE_SDK="FACE_NATIVE_SDK"}(i||(i={})),function(e){e[e.PARSE_ERROR=-32700]="PARSE_ERROR",e[e.INVALID_REQUEST=-32600]="INVALID_REQUEST",e[e.METHOD_NOT_FOUND=-32601]="METHOD_NOT_FOUND",e[e.INVALID_PARAMS=-32602]="INVALID_PARAMS",e[e.INTERNAL_ERROR=-32603]="INTERNAL_ERROR"}(c||(c={})),function(e){e[e.SUCCESS=200]="SUCCESS",e[e.CREATED=201]="CREATED",e[e.BAD_REQUEST=400]="BAD_REQUEST",e[e.UNAUTHORIZED=401]="UNAUTHORIZED",e[e.FORBIDDEN=403]="FORBIDDEN",e[e.NOT_FOUND=404]="NOT_FOUND",e[e.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR"}(A||(A={})),function(e){e[e.INVALID_ARGUMENT=4e3]="INVALID_ARGUMENT",e[e.USER_REJECTED_REQUEST=4001]="USER_REJECTED_REQUEST",e[e.NOT_IMPLEMENTED=4002]="NOT_IMPLEMENTED",e[e.BAD_REQUEST=4003]="BAD_REQUEST",e[e.SEND_TRANSACTION_FAILED=4004]="SEND_TRANSACTION_FAILED",e[e.SIGN_FAILED=4005]="SIGN_FAILED",e[e.UNAUTHORIZED=4100]="UNAUTHORIZED",e[e.NO_USER_DATA=4101]="NO_USER_DATA",e[e.AUTHENTICATION=4102]="AUTHENTICATION",e[e.UNSUPPORTED_SOCIAL_PROVIDER=4103]="UNSUPPORTED_SOCIAL_PROVIDER",e[e.INVALID_ENVIRONMENT=4200]="INVALID_ENVIRONMENT",e[e.UNSUPPORTED_METHOD=4201]="UNSUPPORTED_METHOD",e[e.UNSUPPORTED_CHAIN=4202]="UNSUPPORTED_CHAIN",e[e.INVALID_WALLET=4300]="INVALID_WALLET",e[e.PROVIDERS_AND_WALLETS_CONFIG_ERROR=4301]="PROVIDERS_AND_WALLETS_CONFIG_ERROR",e[e.NO_COIN_AVAILABLE_TO_BUY=4400]="NO_COIN_AVAILABLE_TO_BUY",e[e.INVALID_SIGNATURE_MESSAGE=4906]="INVALID_SIGNATURE_MESSAGE",e[e.INVALID_BORA_API_AND_SECRET_KEY=4907]="INVALID_BORA_API_AND_SECRET_KEY",e[e.ALREADY_CONNECTED_OTHER_BAPP_USN=4909]="ALREADY_CONNECTED_OTHER_BAPP_USN",e[e.BORA_SERVICE_REGION_IS_WRONG=4910]="BORA_SERVICE_REGION_IS_WRONG",e[e.BAPP_USN_ALREADY_CONNECTED_OTHER_WALLET=4911]="BAPP_USN_ALREADY_CONNECTED_OTHER_WALLET",e[e.INTERNAL=5e3]="INTERNAL"}(T||(T={}));class u extends Error{static isFaceError(e){return e.isFaceError}isValidErrorCode(e){return!O(t=e)&&"number"==typeof t&&Object.values(c).includes(t)||function(e){return!O(e)&&"number"==typeof e&&Object.values(T).includes(e)}(e);var t}constructor(e){var t;if(super(),this.isFaceError=!0,this.code=this.isValidErrorCode(e.code)?e.code:T.INTERNAL,this.message=`Face Error: [${this.code}] ${e.message}`,e.origin){const n=e.origin.isFaceError&&e.origin.origin?e.origin.origin:e.origin,{message:o,stack:a,name:r,cause:_}=n;this.origin={message:o,stack:a,name:r,cause:_},n.isAxiosError&&(this.origin.data=null===(t=null==n?void 0:n.response)||void 0===t?void 0:t.data)}e.data&&(this.data=e.data),Object.setPrototypeOf(this,u.prototype),Error.captureStackTrace(this,this.constructor)}}function I(e){return x({code:T.USER_REJECTED_REQUEST,message:"user rejected request",data:{path:e}})}function d(e){return x({message:e.message,code:T.SEND_TRANSACTION_FAILED,data:e.data})}function l(e){return x({message:"invalid environment",code:T.INVALID_ENVIRONMENT,data:{env:e}})}function h(e,t){return x({message:`invalid ${e}`+(t?`: ${t}`:""),code:T.INVALID_ARGUMENT})}function g(e){return x({message:e,code:T.NOT_IMPLEMENTED})}function D(e){return x({message:`${e} login is not supported.`,code:T.UNSUPPORTED_SOCIAL_PROVIDER})}function f(e){return x({message:`${e} is not support get id token`,code:T.UNSUPPORTED_SOCIAL_PROVIDER})}function C(e){return x({message:"unknown error",code:T.INTERNAL,origin:e})}function L(e){return x({message:"invalid api key error",code:T.UNAUTHORIZED,origin:e})}function m(e){return x({message:"invalid host name error",code:T.UNAUTHORIZED,origin:e})}function U(e,t){return x({message:"No coin available to buy.",code:T.NO_COIN_AVAILABLE_TO_BUY,data:{blockchains:e,contractAddress:t}})}function p(e){return x({message:"Invalid Signature message.",code:T.INVALID_SIGNATURE_MESSAGE,origin:e})}function M(e){return x({message:"Not found bapp. please contact FaceWallet Team to register BoraPortal Client Id/SecretKey.",code:T.INVALID_BORA_API_AND_SECRET_KEY,origin:e})}function P(e){return x({message:"already connected to other bappusn",code:T.ALREADY_CONNECTED_OTHER_BAPP_USN,origin:e})}function V(e){return x({message:"bappusn already connected to other wallet",code:T.BAPP_USN_ALREADY_CONNECTED_OTHER_WALLET,origin:e})}function H(e){return new u({message:"bora service region is wrong",code:T.BORA_SERVICE_REGION_IS_WRONG,origin:e})}function F(e){return x({message:"unsupported chain error",code:T.UNSUPPORTED_CHAIN,origin:e})}function w(){return x({message:"invalid wallet error",code:T.INVALID_WALLET})}function B(){return x({message:"Both wallets and providers cannot be empty.",code:T.PROVIDERS_AND_WALLETS_CONFIG_ERROR})}function b(){return x({message:"no user data",code:T.NO_USER_DATA})}function y(e,t){return x({message:`OAuth 2.0 Error: ${e}`,code:T.AUTHENTICATION,origin:t})}function v(e){return x({message:e,code:T.SIGN_FAILED})}function x(e){return new u(e)}function G(e,t,n){if(!e)throw t(...null!=n?n:[])}function k(e,t,n,o=!0){(o||e)&&G(!!e&&t,h,[n])}function W(e){return null==e||"object"!=typeof e||null==e.serializedHex||"string"!=typeof e.serializedHex?null:e}!function(e){e.COIN="COIN",e.ERC20="ERC20",e.ERC721="ERC721",e.ERC1155="ERC1155",e.FT="FT",e.CONVERT="CONVERT",e.Associate="ASSOCIATE",e.FA2_FT="FA2_FT",e.FA2_NFT="FA2_NFT",e.FA2_MFT="FA2_MFT"}(N||(N={}));const Y="Face-Version",K="Face-Auth-Session",Q="Face-OAuth-Result",$="m/44'/60'/1'/0/0";var z;!function(e){e.isWalletCreated="isWalletCreated",e.isNewUser="isNewUser",e.isRegisteredPinCode="isRegisteredPinCode",e.isAdmin="isAdmin"}(z||(z={}));export{o as Blockchain,a as BoraPortalConnectStatusEnum,S as CryptoBuffer,_ as DesktopOS,r as Env,K as FaceAuthSessionKey,u as FaceError,T as FaceErrorCode,Q as FaceOAuthResultKey,Y as FaceVersionLocalKey,A as HttpStatus,s as JsonRpcMethod,i as JsonRpcSource,t as LoginProvider,E as MobileOS,n as Network,c as RpcErrorCode,N as TxType,z as UserStatus,$ as WalletPath,P as alreadyConnectedToOtherBappusn,G as assert,k as assertArgument,V as bappusnAlreadyConnectedToOtherWallet,H as boraServiceRegionIsWrong,L as invalidApiKeyError,h as invalidArgumentError,M as invalidBoraPortalIdAndSecretKey,l as invalidEnvironmentError,m as invalidHostNameError,p as invalidSignatureError,w as invalidWallet,B as kitProvidersAndWalletsConfigError,x as makeError,U as noCoinAvailableToBuy,b as noUserDataError,g as notImplementedError,y as oauthError,W as parseFaceSolanaNearTransactionPayload,d as sendTransactionError,v as signError,C as unknownError,F as unsupportedChainError,D as unsupportedProviderError,f as unsupportedTokenProviderError,I as userRejectedRequest};
//# sourceMappingURL=index.mjs.map
